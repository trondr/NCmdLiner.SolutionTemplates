<?xml version="1.0" encoding="UTF-8"?>

<?define ProductName="_S_ProductName_S_ Service" ?>
<?define ProductFeature="_S_ProductName_S_ Service" ?>
<?define ProductProjectName="_S_ServiceProjectName_S_" ?>
<?define PackageDescription="_S_ServiceDescription_S_" ?>
<?define ProductUpgradeCode="{ECD7A685-EDCC-474C-AD38-000000000002}" ?>
<?define PackageKeywords="_S_ProductName_S_ Service" ?>
<?define CompanyName="_S_CompanyName_S_" ?>

<?define ProductExeBaseName="_S_ServiceProjectName_S_" ?>
<?define ProductLibraryBaseName="_S_ServiceLibraryProjectName_S_" ?>

<?define ProductExeReleaseFolder="..\..\bin\release\_S_ServiceProjectName_S_" ?>
<?define ProductLibraryReleaseFolder="..\..\bin\release\_S_ServiceLibraryProjectName_S_" ?>

<?define ProductContractsDllName="_S_ServiceContractsProjectName_S_"?>
<?define ProductContractsDllBinFolder="..\..\bin\release\_S_ServiceContractsProjectName_S_"?>

<?define ProductBaseDllName="_S_LibraryProjectName_S_"?>
<?define ProductBaseDllBinFolder="..\..\bin\release\_S_LibraryProjectName_S_"?>

<?define ProductHelpLink="https://_S_CompanyName_S_.com"?>
<?define TargetFolderName="_S_ProductName_S_"?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
  <Product
      Id="*"
      UpgradeCode="$(var.ProductUpgradeCode)"
      Name="$(var.ProductName)"
      Language="!(loc.LanguageCode)"
      Version="!(bind.FileVersion.ProductDll)"
      Manufacturer="$(var.CompanyName)"
      >

    <Package
      Id="*"
      InstallerVersion="200"
      InstallPrivileges="elevated"
      InstallScope="perMachine"
      Compressed="yes"
      Platform="x86"
      Description="$(var.PackageDescription)"
      Keywords="$(var.PackageKeywords)"
      Languages="!(loc.LanguageCode)"
      SummaryCodepage="1252"
      Manufacturer="$(var.CompanyName)"
      />

    <Icon Id="Product_Icon" SourceFile="$(var.ProductExeReleaseFolder)\$(var.ProductExeBaseName).exe"/>
    <Property Id="ARPPRODUCTICON"  Value="Product_Icon"/>
    <Property Id="ARPHELPLINK" Value="$(var.ProductHelpLink)" />
    <Property Id="ARPCOMMENTS">$(var.PackageDescription)</Property>
    <Property Id="ARPCONTACT">$(var.CompanyName)</Property>

    <PropertyRef Id ="NETFRAMEWORK45"/>

    <Condition Message="!(loc.DotNetFrameWorkConditionMessage)">Installed OR NETFRAMEWORK45</Condition>

    <Upgrade Id="$(var.ProductUpgradeCode)">
      <UpgradeVersion Property="SELFFOUND" OnlyDetect="yes"  Minimum="!(bind.FileVersion.ProductDll)" IncludeMinimum='yes'  Maximum="!(bind.FileVersion.ProductDll)" IncludeMaximum='yes' />
      <UpgradeVersion Property="NEWERFOUND" OnlyDetect="yes" Minimum="!(bind.FileVersion.ProductDll)" IncludeMinimum="no" />
      <UpgradeVersion Property="OLDERFOUND" OnlyDetect="no"  Minimum="1.0.0.0" IncludeMinimum="yes" Maximum="!(bind.FileVersion.ProductDll)" IncludeMaximum="no" />
    </Upgrade>

    <CustomAction Id="NoDowngrade" Error="A later version of $(var.ProductName) is already installed." />
    <CustomAction Id="NoSelf" Error="Same version of $(var.ProductName) is already installed." />
    <CustomAction Id="Install_Assemblies_CustomAction"             Directory="TargetFolder" Return="check" Execute="deferred" Impersonate="no" ExeCommand="&quot;[TargetFolder]\NMultiTool\NMultiTool.exe&quot; InstallUtil /installAction=Install /directory=&quot;[TargetFolder].&quot; /includeFileSpecs=&quot;{'_S_ConsoleProjectName_S_.exe'}&quot; /excludeFileSpecs=&quot;{'excludeNothing'}&quot;" />
    <CustomAction Id="Install_Assemblies_AfterCommit_CustomAction" Directory="TargetFolder" Return="check" Execute="commit"   Impersonate="no" ExeCommand="&quot;[TargetFolder]\NMultiTool\NMultiTool.exe&quot; InstallUtil /installAction=Install /directory=&quot;[TargetFolder].&quot; /includeFileSpecs=&quot;{'_S_ConsoleProjectName_S_.exe'}&quot; /excludeFileSpecs=&quot;{'excludeNothing'}&quot;" />
    <CustomAction Id="UnInstall_Assemblies_CustomAction"           Directory="TargetFolder" Return="check" Execute="deferred" Impersonate="no" ExeCommand="&quot;[TargetFolder]\NMultiTool\NMultiTool.exe&quot; InstallUtil /installAction=UnInstall /directory=&quot;[TargetFolder].&quot; /includeFileSpecs=&quot;{'_S_ConsoleProjectName_S_.exe'}&quot; /excludeFileSpecs=&quot;{'excludeNothing'}&quot;" />

    <InstallExecuteSequence>
      <Custom Action="NoDowngrade" After="FindRelatedProducts"><![CDATA[NEWERFOUND]]></Custom>
      <Custom Action="NoSelf" After="FindRelatedProducts"><![CDATA[SELFFOUND]]></Custom>
      <Custom Action="Install_Assemblies_CustomAction" After="InstallFiles">($ProductExe_WiXComponent&gt;2)</Custom>
      <Custom Action="Install_Assemblies_AfterCommit_CustomAction" After="InstallFiles">($ProductExe_WiXComponent&gt;2)</Custom>
      <Custom Action="UnInstall_Assemblies_CustomAction" After="UnpublishFeatures">($ProductExe_WiXComponent=2)</Custom>
      <RemoveExistingProducts After="InstallInitialize"/>
      <LaunchConditions After="AppSearch"/>
    </InstallExecuteSequence>

    <Media Id="1" Cabinet="$(var.ProductProjectName)" EmbedCab="yes" CompressionLevel="high"/>

    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="ProgramFilesFolder">
        <Directory Id="CompanyFolder" Name="$(var.CompanyName)">
          <Directory Id="TargetBaseFolder" Name="$(var.TargetFolderName)">
            <Directory Id="TargetFolder" Name="!(bind.FileVersion.ProductDll)" ></Directory>
          </Directory>
        </Directory>
      </Directory>
    </Directory>

    <Feature Id="ProductFeature" Title="$(var.ProductFeature)" Level="1">
      <ComponentGroupRef Id="ProductComponents_WiXComponentGroup" />
      <ComponentGroupRef Id="Components_WiXComponentGroup" />
    </Feature>

    <WixVariable Id="WixUIBannerBmp" Value="WixUIBanner.bmp"/>
    <WixVariable Id="WixUIDialogBmp" Value="WiXUiDialog.bmp"/>
    <WixVariable Id="WixUILicenseRtf" Value="License.rtf"/>
    <UIRef Id="WixUI_Mondo"/>

  </Product>

  <Fragment>
    <ComponentGroup Id="ProductComponents_WiXComponentGroup" Directory="TargetFolder">
      <Component Id="ProductExe_WiXComponent" Guid="*">
        <CreateFolder/>

        <RemoveFolder Id="TargetFolder_WixRemoveFolder" On="uninstall" Directory="TargetFolder"/>
        <RemoveFolder Id="TargetBaseFolder_WixRemoveFolder" On="uninstall" Directory="TargetBaseFolder"/>
        <RemoveFolder Id="CompanyFolder_WixRemoveFolder" On="uninstall" Directory="CompanyFolder"/>
        <RemoveFile Id="TargetFolderFiles_WixRemoveFile" Name="*.*" On="uninstall" Directory="TargetFolder" />

        <File Id="ProductExe" Name="$(var.ProductExeBaseName).exe" Source="$(var.ProductExeReleaseFolder)\$(var.ProductExeBaseName).exe" KeyPath="yes" />
        <File Id="ProductExePdb" Name="$(var.ProductExeBaseName).pdb" Source="$(var.ProductExeReleaseFolder)\$(var.ProductExeBaseName).pdb" KeyPath="no"/>
        <File Id="ProductExeConfig" Name="$(var.ProductExeBaseName).exe.config" Source="$(var.ProductExeReleaseFolder)\$(var.ProductExeBaseName).exe.config" KeyPath="no" />

        <RegistryKey Root="HKLM" Key="SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\$(var.ProductExeBaseName).exe" />
        <RegistryValue Root="HKLM" Key="SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\$(var.ProductExeBaseName).exe" Value="[#ProductExe]" Type="string" Action="write" />
        <RegistryValue Root="HKLM" Key="SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\$(var.ProductExeBaseName).exe" Name="path" Value="[TargetFolder]" Type="string" Action="write" />

        <ServiceInstall
          Id="_S_ShortProductName_S_ServiceInstaller"
          Type="ownProcess"
          Vital="yes"
          Name="_S_ShortProductName_S_Service"
          DisplayName="_S_ProductName_S_ Service"
          Description="$(var.PackageDescription)"
          Start="demand"
          Account="LocalSystem"
          ErrorControl="ignore"
          Interactive="yes" >
          <!--1. First use the following to set the permissions: <util:PermissionEx User="Users" ServiceStart="yes" ServiceStop="yes"  />-->
          <!--2. Since User='Users' probably will not work on any operating system different from English, use sddl in stead. -->
          <!--3. Command that gives Sddl: SC.exe SDSHOW ItoClientInfoService-->
          <PermissionEx Id="_S_ShortProductName_S_Permissions" Sddl="D:(A;;CCLCSWRPWPLO;;;BU)(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)"/>
        </ServiceInstall>
        <ServiceControl Id="StartService" Stop="both" Remove="uninstall" Name="_S_ShortProductName_S_Service" Wait="yes" />
      </Component>
        
      <Component Id="ProductLibraryDll_WixComponent" Guid="*">
        <CreateFolder/>
        <File Id="ProductDll" Name="$(var.ProductLibraryBaseName).dll" Source="$(var.ProductLibraryReleaseFolder)\$(var.ProductLibraryBaseName).dll" KeyPath="yes" />
        <File Id="ProductDllPdb" Name="$(var.ProductLibraryBaseName).pdb" Source="$(var.ProductLibraryReleaseFolder)\$(var.ProductLibraryBaseName).pdb" KeyPath="no"/>
      </Component>

      <Component Id="ProductBaseDll_WixComponent" Guid="*">
        <CreateFolder/>
        <File Id="ProductBaseDll" Name="$(var.ProductBaseDllName).dll" Source="$(var.ProductBaseDllBinFolder)\$(var.ProductBaseDllName).dll" KeyPath="yes" />
        <File Id="ProductBaseDllPdb" Name="$(var.ProductBaseDllName).pdb" Source="$(var.ProductBaseDllBinFolder)\$(var.ProductBaseDllName).pdb" KeyPath="no"/>
      </Component>

      <Component Id="ProductContractsDll_WixComponent" Guid="*">
        <CreateFolder/>
        <File Id="ProductContractsDll" Name="$(var.ProductContractsDllName).dll" Source="$(var.ProductContractsDllBinFolder)\$(var.ProductContractsDllName).dll" KeyPath="yes" />
        <File Id="ProductContractsDllPdb" Name="$(var.ProductContractsDllName).pdb" Source="$(var.ProductContractsDllBinFolder)\$(var.ProductContractsDllName).pdb" KeyPath="no"/>
      </Component>
      
    </ComponentGroup>
  </Fragment>
</Wix>