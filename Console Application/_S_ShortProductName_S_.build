<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--Set product properties and paths-->
  
  <PropertyGroup>    
    <ProductName>_S_ShortProductName_S_</ProductName>
    <ProductCompany>_S_CompanyName_S_</ProductCompany>
    <ProductDescription>_S_ProductDescription_S_</ProductDescription>
    <ProductCopyright>Copyright &#169; _S_CompanyName_S_ $([System.DateTime]::Now.Year)</ProductCopyright>
    <ProductProjectName>$(ProductName)</ProductProjectName>

    <ShortYear>$([System.DateTime]::Now.ToString(`yy`))</ShortYear>
    <DayOfYear>$([System.DateTime]::Now.DayOfYear.ToString(`000`))</DayOfYear>
    <Major>1</Major>
    <Minor>0</Minor>
    <Build>$(ShortYear)$(DayOfYear)</Build>
    <Revision>0</Revision>

    <BinDirectory>$(MSBuildProjectDirectory)\bin</BinDirectory>
    <SrcDirectory>$(MSBuildProjectDirectory)\src</SrcDirectory>
    <ToolsDirectory>$(MSBuildProjectDirectory)\tools</ToolsDirectory>
  
    <NunitVersion>2.6.3</NunitVersion>
    
  </PropertyGroup>
  
  <!--
		Include MSBuild Community Tasks.
	-->
  <Choose>
    <When Condition="Exists('$(ToolsDirectory)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets')">
      <PropertyGroup>
        <MSBuildCommunityTasksAvailable>true</MSBuildCommunityTasksAvailable>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <MSBuildCommunityTasksAvailable>false</MSBuildCommunityTasksAvailable>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <Import Project="$(ToolsDirectory)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" Condition=" '$(MSBuildCommunityTasksAvailable)' == 'true' "/>

  <!-- Verify that NUnit is available-->
  
  <Choose>
    <When Condition="Exists('$(ToolsDirectory)\NUnit\nunit.exe')">
      <PropertyGroup>
        <NUnitIsAvailable>true</NUnitIsAvailable>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <NUnitIsAvailable>false</NUnitIsAvailable>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Verify if current solution is in a .git repository-->

  <Choose>
    <When Condition="Exists('$(MSBuildProjectDirectory)\.git')">
      <PropertyGroup>
        <IsGitRepository>true</IsGitRepository>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <IsGitRepository>false</IsGitRepository>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <ItemGroup>
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\.hg\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\.git\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\.svn\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\bin\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\obj\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\Release\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\Debug\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\Test\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\TestResults\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\doc\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\www\**" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\*.user" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\*.suo" />
    <DefaultExclude Include="$(MSBuildProjectDirectory)\**\*.zip" />    
	<DefaultExclude Include="$(MSBuildProjectDirectory)\**\TestResult.xml" />
  </ItemGroup>

  <ItemGroup>
    <SourceFiles Include="$(SrcDirectory)\**\*.*" Exclude="@(DefaultExclude)" />
	<SourceFiles Include="$(MSBuildProjectDirectory)\*.*" Exclude="@(DefaultExclude)" />
	<SourceFiles Include="$(ToolsDirectory)\**\*.*" Exclude="@(DefaultExclude)" />
  </ItemGroup>
  <Target Name="GitHashInit">
    <CreateProperty Value="unknown">
      <Output TaskParameter="Value" PropertyName="RevisionHash" />
    </CreateProperty>
  </Target>
  
  <Target Name="GitHash" Condition=" '$(IsGitRepository)' == 'true' " DependsOnTargets="GitHashInit">
    <GitVersion LocalPath="$(MSBuildProjectDirectory)" Timeout="5000">
      <Output TaskParameter="CommitHash" PropertyName="RevisionHash" />
    </GitVersion>
  </Target>
  
  <Target Name="Version" DependsOnTargets="GitHash">    
    <XmlRead XPath="/root/property[@name='revision']/@value" XmlFileName="revision.xml">
      <Output TaskParameter="Value" PropertyName="Revision" />
    </XmlRead>
    <Math.Add Numbers="$(Revision);1">
      <Output TaskParameter="Result" PropertyName="Revision" />
    </Math.Add>
    <XmlUpdate XPath="/root/property[@name='revision']/@value" XmlFileName="revision.xml" Value="$(Revision)"/>
    <CreateProperty Value="$(Major).$(Minor).$(Build).$(Revision)">
      <Output TaskParameter="Value" PropertyName="AssemblyVersion" />
    </CreateProperty>
    <Message Text="AssemblyVersion: $(AssemblyVersion)"/>
    <AssemblyInfo CodeLanguage="CS"
     OutputFile="$(SrcDirectory)\_S_ConsoleProjectName_S_\Properties\AssemblyInfo.cs"
     AssemblyDescription="$(ProductDescription)"
     AssemblyCompany="$(ProductCompany)"
     AssemblyProduct="_S_ConsoleProjectName_S_"
     AssemblyCopyright="$(ProductCopyright)"
     CLSCompliant="false"
	   AssemblyInformationalVersion="$(Major).$(Minor).$(Build).$(Revision).$(RevisionHash)"
     AssemblyVersion="$(AssemblyVersion)"
     AssemblyFileVersion="$(AssemblyVersion)"
	  />
	<AssemblyInfo CodeLanguage="CS"
     OutputFile="$(SrcDirectory)\_S_LibraryProjectName_S_\Properties\AssemblyInfo.cs"
     AssemblyDescription="$(ProductDescription)"
     AssemblyCompany="$(ProductCompany)"
     AssemblyProduct="_S_LibraryProjectName_S_"
     AssemblyCopyright="$(ProductCopyright)"
     CLSCompliant="false"
     AssemblyInformationalVersion="$(Major).$(Minor).$(Build).$(Revision).$(RevisionHash)"
     AssemblyVersion="$(AssemblyVersion)"
     AssemblyFileVersion="$(AssemblyVersion)"
	  />
	  
	 <AssemblyInfo CodeLanguage="CS"
     OutputFile="$(SrcDirectory)\_S_TestsProjectName_S_\Properties\AssemblyInfo.cs"
     AssemblyDescription="$(ProductDescription)"
     AssemblyCompany="$(ProductCompany)"
     AssemblyProduct="_S_TestsProjectName_S_"
     AssemblyCopyright="$(ProductCopyright)"
     CLSCompliant="false"
     AssemblyInformationalVersion="$(Major).$(Minor).$(Build).$(Revision).$(RevisionHash)"
     AssemblyVersion="$(AssemblyVersion)"
     AssemblyFileVersion="$(AssemblyVersion)"
	  />
  </Target>

  <!--Compile-->
  
  <Target Name="Compile" DependsOnTargets="Version" >
    <MSBuild Projects="$(SrcDirectory)\_S_LibraryProjectName_S_\_S_LibraryProjectName_S_.csproj" Properties="Configuration=Release;" />
    <MSBuild Projects="$(SrcDirectory)\_S_ConsoleProjectName_S_\_S_ConsoleProjectName_S_.csproj" Properties="Configuration=Release;" />
  </Target>

  <Target Name="CompileTests" DependsOnTargets="Compile">
    <MSBuild Projects="$(SrcDirectory)\_S_TestsProjectName_S_\_S_TestsProjectName_S_.csproj" Properties="Configuration=Release"/>
  </Target>

  <!--Prepare for test-->
  
  <Target Name="DownloadNunit" Condition=" '$(NUnitIsAvailable)' == 'false' ">
    <Message Text="Downloading NUnit..." Importance="normal" />
    <WebDownload FileUri="http://launchpad.net/nunitv2/trunk/2.6.3/+download/NUnit-$(NunitVersion).zip" FileName="$(BinDirectory)\Download\NUnit-$(NunitVersion).zip" />
    <Message Text="Extracting NUnit..." Importance="normal" />
    <Unzip ZipFileName="$(BinDirectory)\Download\NUnit-$(NunitVersion).zip" TargetDirectory="$(BinDirectory)\Download"/>
    <ItemGroup>
      <NUnitFiles Include="$(BinDirectory)\Download\NUnit-$(NunitVersion)\bin\**\**"/>
    </ItemGroup>
    <Message Text="Copying NUnit to tools folder..." Importance="normal" />
    <Copy SourceFiles="@(NUnitFiles)" DestinationFolder="$(ToolsDirectory)\NUnit\%(RecursiveDir)"/>
    <Copy SourceFiles="$(BinDirectory)\Download\NUnit-$(NunitVersion)\license.txt" DestinationFiles="$(ToolsDirectory)\NUnit\license.txt"/>
    <Delete Files="$(BinDirectory)\Download\NUnit-$(NunitVersion).zip"/>
    <DeleteTree Directories="$(BinDirectory)\Download\NUnit-$(NunitVersion)"/>        
  </Target>

  <!-- Run Unit tests -->
  
  <Target Name="Tests" DependsOnTargets="CompileTests;DownloadNunit">
    <CreateItem Include="$(BinDirectory)\Release\_S_TestsProjectName_S_\_S_TestsProjectName_S_.dll">
      <Output TaskParameter="Include" ItemName="TestAssembly" />
    </CreateItem>

    <NUnit Assemblies="@(TestAssembly)" IncludeCategory="UnitTests" ToolPath="$(ToolsDirectory)\NUnit"/>
  </Target>

  <Target Name="CompileSetup" DependsOnTargets="Tests">
    <MSBuild Projects="$(SrcDirectory)\_S_SetupProjectName_S_\_S_SetupProjectName_S_.wixproj" Properties="Configuration=Release"/>    
  </Target>
  
  <ItemGroup>
    <ReleaseFiles Include="$(BinDirectory)\Release\$(ProductName)\**\*.exe" Exclude="$(BinDirectory)\Release\$(ProductName)\**\Libs\**" />
    <ReleaseFiles Include="$(BinDirectory)\Release\$(ProductName)\**\*.dll" Exclude="$(BinDirectory)\Release\$(ProductName)\**\Libs\**" />
    <ReleaseFiles Include="$(BinDirectory)\Release\$(ProductName)\**\*.pdb" Exclude="$(BinDirectory)\Release\$(ProductName)\**\Libs\**" />
    <ReleaseFiles Include="$(BinDirectory)\Release\$(ProductName)\**\*.config" Exclude="$(BinDirectory)\Release\$(ProductName)\**\Libs\**" />
  </ItemGroup>
    
  <Target Name="Deploy" DependsOnTargets="Version;CompileSetup">
    
    <Zip Files="@(ReleaseFiles)"
         WorkingDirectory="$(BinDirectory)\Release\$(ProductName)"
         ZipFileName="$(BinDirectory)\Release\_S_ConsoleProjectName_S_.$(AssemblyVersion).zip"
         ZipLevel="9"
         />
    <Message Text="$(ProductName) relase zip complete" Importance="normal" />
    <Zip Files="@(SourceFiles)"
         WorkingDirectory="$(MSBuildProjectDirectory)"
         ZipFileName="$(BinDirectory)\Release\_S_ConsoleProjectName_S_.Source.$(AssemblyVersion).zip"
         ZipLevel="9"
         />
    <Message Text="$(ProductName) source zip complete" Importance="normal" />
  </Target>

  <Target Name="Build" DependsOnTargets="Deploy">
    <Message Text="$(ProductProjectName) $(AssemblyVersion) build complete" Importance="normal" />
  </Target>
</Project>
